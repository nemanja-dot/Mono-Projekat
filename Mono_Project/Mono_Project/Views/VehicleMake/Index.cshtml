@model PagingDataList<VehicleMake>


@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            @if (!string.IsNullOrWhiteSpace(ViewData["CurrentFilter"] as string))
            {
                <a asp-action="Index">Back to Full List</a>
            }
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Id)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@(string.IsNullOrWhiteSpace(ViewData["NameSortParm"] as string) ? "name_desc" : "")" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-page="@(Model.PageIndex)" asp-route-count="@ViewData["Count"]">@Html.DisplayNameFor(model => model[0].Name)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Abrv)
            </th>

            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <th>
                    @Html.DisplayFor(modelItem => item.Id)
                </th>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Abrv)
                </td>

                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<table class="table">
    <thead>
    <th>

        @if (Model.HasPreviousPage)
        {
            <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-page="@(Model.PageIndex - 1)" asp-route-count="@ViewData["Count"]">Previous page</a>
        }
    </th>
    <th>
        @if (Model.HasNextPage)
        {
            <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-page="@(Model.PageIndex + 1)" asp-route-count="@ViewData["Count"]">Next page</a>
        }
    </th>
    </thead>

    <tbody>
    <th>
        <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-page="@(Model.PageIndex)" asp-route-count="10">Pageview 10</a>
    </th>
    <th>
        <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-page="@(Model.PageIndex)" asp-route-count="20">Pageview 20</a>
    </th>

    </tbody>
</table>
